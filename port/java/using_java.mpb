feature (java) {

  requires += java

  includes += $(JAVA_HOME)/include
  includes += port/java/jni
  
  macros += _MADARA_JAVA_

  
 
  Define_Custom (JAVA_CAPN) {
    command = capnp compile -I $(CAPNP_ROOT)/c++/src -ojava
    inputext = .capnp
    generic_outputext = .java,.capnp.bin
  }

  specific (prop:windows) {
    includes += $(JAVA_HOME)/include/win32
  } else {
    includes += $(JAVA_HOME)/include/darwin
    includes += $(JAVA_HOME)/include/linux
  }

  Source_Files {
    port/java/jni
    include/madara/threads/java
    include/madara/filters/java
  }
  
  Header_Files {
    port/java/jni
    include/madara/threads/java
    include/madara/utility/java
    include/madara/filters/java
  }

  //JAVA_CAPN_Files {
   // tests/capnfiles
  //}

  
	postbuild += mvn -f port/java versions:set -DnewVersion=`<%cat%> $(MADARA_ROOT)/VERSION.txt`
	postbuild += mvn -f port/java versions:commit
        postbuild += mvn -f port/java "-Dtest=ai/madara/tests/basic/**" -P development clean package test
  	postbuild += mvn -f port/java -DskipTests -P development package jar:test-jar install
}

//Amit added this. Couldn't find a better way to selectively add postbuild statements. 
//Fixme: Add the postbuild statements inside feature(java).

feature (lz4){
   postbuild += mvn -f port/java "-Dtest=ai/madara/tests/lz4/**" -P development test
}

feature (ssl){
  postbuild += mvn -f port/java "-Dtest=ai/madara/tests/ssl/**" -P development test
}

