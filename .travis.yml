sudo: required
group: travis_latest
language: cpp
os:
  - linux

branches:
  excludes:
    - gh-pages

compiler:
  - gcc

env:
  matrix:
  global:
    - MADARA_ROOT=$TRAVIS_BUILD_DIR
    - GAMS_ROOT=$TRAVIS_BUILD_DIR/gams
    - MPC_ROOT=$TRAVIS_BUILD_DIR/MPC
    - CAPNP_ROOT=$TRAVIS_BUILD_DIR/capnproto
    - LD_LIBRARY_PATH=$CAPNP_ROOT/c++/.libs:$MADARA_ROOT/lib:$GAMS_ROOT/lib:$LD_LIBRARY_PATH
    - PATH=$CAPNP_ROOT/c++:$PATH
    - CORES=6
    - TESTS="tests"

matrix:
  allow_failures:
    - env: NAME="OSX 10.13 clang zmq" CLANG="clang" ZMQ="zmq"
  include:
      ################MAC#####################

      # clang, osx, no ssl
    - compiler: clang
      env: NAME="OSX 10.13 clang" CLANG="clang"
      os: osx
      osx_image: xcode9.3

      # clang, osx, ssl
    - compiler: clang
      env: NAME="OSX 10.13 clang ssl" CLANG="clang" SSL="ssl" SSL_ROOT=/usr/local/opt/openssl
      os: osx
      osx_image: xcode9.3

      # clang, osx, java
    - compiler: clang
      env: NAME="OSX 10.13 clang java" CLANG="clang" JAVA="java"
      os: osx
      osx_image: xcode9.3

      # clang, osx, zeromq
    - compiler: clang
      env: NAME="OSX 10.13 clang zmq" CLANG="clang" ZMQ="zmq"
      os: osx
      osx_image: xcode9.3

      # clang, osx, simtime
    - compiler: clang
      env: NAME="OSX 10.13 clang simtime" CLANG="clang" SIMTIME="simtime"
      os: osx
      osx_image: xcode9.3

      ################LINUX#####################

      # clang, linux, no ssl
    - compiler: clang
      env: NAME="Ubuntu 14.04 clang" CLANG="clang"
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-5.0
          packages:
            - libssl-dev
            - clang-5.0
      os: linux

      # g++, linux, no ssl
    - compiler: gcc
      os: linux
      env: NAME="Ubuntu 14.04 g++" CLANG=""

      # g++, linux, ssl
    - compiler: gcc
      os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - libssl-dev
      env: NAME="Ubuntu 14.04 g++ ssl" CLANG="" SSL="ssl"

      # g++, linux, java
    - compiler: gcc
      os: linux
      env: NAME="Ubuntu 14.04 g++ java" JAVA="java"

      # g++, linux, zmq
    - compiler: gcc
      os: linux
      env: NAME="Ubuntu 14.04 g++ zmq" ZMQ="zmq"

      # g++, linux, zmq
    - compiler: gcc
      os: linux
      env: NAME="Ubuntu 14.04 g++ python" PYTHON="python"

      # g++, linux, simtime
    - compiler: gcc
      os: linux
      env: NAME="Ubuntu 14.04 g++ simtime" SIMTIME="simtime"

      # g++ linux, android
    - compiler: gcc
      os: linux
      env: NAME="Ubuntu 14.04 android" ANDROID="android" TESTS=""

      # g++, linux, android, zmq
    - compiler: gcc
      os: linux
      env: NAME="Ubuntu 14.04 android zmq" ANDROID="android" TESTS="" ZMQ="zmq"

addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
    packages:
      - git-core

before_install:
  - git clone -b master --single-branch https://github.com/jredmondson/gams $GAMS_ROOT
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew update          ; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew install openssl; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew install zeromq; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew link openssl --force; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then sudo apt-get -y update; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then sudo apt-get -y install gcc-5 g++-5; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-5 60 --slave /usr/bin/g++ g++ /usr/bin/g++-5; fi

before_script:
  - export
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then export OS=linux; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then export OS=mac; export CLANG_SUFFIX=; export JAVA_HOME=$(/usr/libexec/java_home) ; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then export DYLD_LIBRARY_PATH=$CAPNP_ROOT/c++/.libs:$DYLD_LIBRARY_PATH:$MADARA_ROOT/lib:$GAMS_ROOT/lib:$VREP_ROOT ; fi
  - if [[ "$JAVA" == "java" ]]; then echo "TRAVIS_JDK_VERSION=TRAVIS_JDK_VERSION" ; fi

script:
  - echo "TRAVIS_BRANCH=$TRAVIS_BRANCH"
  - echo "TRAVIS_PULL_REQUEST=$TRAVIS_PULL_REQUEST"
  - echo "TRAVIS_BUILD_DIR=$TRAVIS_BUILD_DIR"
  - echo ls $TRAVIS_BUILD_DIR
  - ls $TRAVIS_BUILD_DIR
  - echo $GAMS_ROOT/scripts/$OS/base_build.sh prereqs $CLANG madara $TESTS $SSL $JAVA $PYTHON $ZMQ $SIMTIME
  - $GAMS_ROOT/scripts/$OS/base_build.sh prereqs $CLANG madara $TESTS $SSL $JAVA $PYTHON $ZMQ $SIMTIME $ANDROID

  # now run functionality unit tests 
 # - if [ $TESTS == "tests" ]; then 
  #  chmod ugo+x automation_tests.sh;
  #  ./automation_tests.sh;
  #  fi  
  - $MADARA_ROOT/bin/test_any
